<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ZUI="clr-namespace:ZdfFlatUI">

    <PathGeometry x:Key="Arrow" Figures="M517.436772 598.65255l148.743683-148.775664c9.17855-9.17855 11.896936-22.866423 6.939879-34.859302-4.957057-11.960898-16.630126-19.732284-29.550454-19.732284L346.050532 395.285299c-12.920329 0-24.593398 7.803367-29.550454 19.732284-1.631032 3.965645-2.430557 8.123177-2.430557 12.248727 0 8.315063 3.262063 16.502202 9.370436 22.610575l148.775664 148.775664c6.01243 6.01243 14.135607 9.370436 22.610575 9.370436S511.456323 604.632999 517.436772 598.65255z" />

    <Style x:Key="ToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Bd" Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <Path Width="8" Height="8" Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Data="{StaticResource Arrow}" Stretch="Uniform"
                              Fill="#3399FF" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Cursor" Value="Hand" />
                            <Setter TargetName="Bd" Property="Background" Value="#F3F3F3" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Bd" Property="Cursor" Value="Hand" />
                            <Setter TargetName="Bd" Property="Background" Value="#F3F3F3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ZUI:DropdownButtonItem}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background" Value="#FFFFFF" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="#657180" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ZUI:DropdownButtonItem}">
                    <Border x:Name="PART_Root"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true" UseLayoutRounding="True">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          Margin="{TemplateBinding Padding}"/>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="PART_Root" Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="00:00:0.2" Value="#FFFFFF" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="PART_Root" Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="00:00:0.2" Value="#E3E8EE" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type ZUI:DropDownButton}">
        <Setter Property="Background" Value="#FFFFFF"/>
        <Setter Property="BorderBrush" Value="#3399FF" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="#3399FF" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="False" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ZUI:DropDownButton}">
                    <Border x:Name="Root" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="1" />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>
                            
                            <TextBlock Text="升级" Foreground="{TemplateBinding Foreground}"
                                       HorizontalAlignment="Center" VerticalAlignment="Center" />
                            
                            <Border Grid.Column="1" Background="{TemplateBinding BorderBrush}"
                                    Width="1" />

                            <ToggleButton x:Name="toggleButton" Grid.Column="2" Style="{StaticResource ToggleButtonStyle}"
                                          Padding="3,0" IsChecked="{Binding Path=IsDropDownOpen,
                                                                            RelativeSource={RelativeSource TemplatedParent},
                                                                            Mode=TwoWay}" />

                            <Popup AllowsTransparency="True" StaysOpen="False" 
                                   Placement="Bottom" PlacementTarget="{Binding ElementName=Root}"
                                   IsOpen="{Binding IsChecked, ElementName=toggleButton}"
                                   MinWidth="{Binding ActualWidth, ElementName=Root}"
                                   VerticalOffset="1" SnapsToDevicePixels="True" UseLayoutRounding="True">
                                <Border BorderBrush="Black" BorderThickness="1"
                                        UseLayoutRounding="True" Background="Transparent">
                                    <ZUI:ZScrollViewer Focusable="False" HorizontalScrollBarVisibility="Hidden"
                                                       Padding="{TemplateBinding Control.Padding}"
                                                       VerticalScrollBarVisibility="Auto"
                                                       UseLayoutRounding="True">
                                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                                        UseLayoutRounding="True"/>
                                    </ZUI:ZScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Root" Property="Background" Value="#F3F3F3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>